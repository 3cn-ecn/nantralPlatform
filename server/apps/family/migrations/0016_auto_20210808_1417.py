# Generated by Django 3.2.4 on 2021-08-08 12:17

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('student', '0005_auto_20210801_1726'),
        ('family', '0015_auto_20210807_1902'),
    ]

    operations = [
        migrations.CreateModel(
            name='QuestionPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom de la page')),
                ('name_en', models.CharField(max_length=100, verbose_name='Nom (en)')),
                ('details', models.CharField(blank=True, max_length=200, null=True, verbose_name='Informations supplémentaires')),
                ('details_en', models.CharField(blank=True, max_length=200, null=True, verbose_name='Infos (en)')),
                ('order', models.IntegerField(help_text="Ordre d'apparition de la page dans le questionnaire", verbose_name='Ordre')),
            ],
            options={
                'verbose_name': 'Page de Questions',
                'verbose_name_plural': 'Pages de Questions',
            },
        ),
        migrations.RemoveField(
            model_name='affichage',
            name='affichage',
        ),
        migrations.RemoveField(
            model_name='basequestion',
            name='type_form',
        ),
        migrations.AddField(
            model_name='affichage',
            name='phase',
            field=models.IntegerField(choices=[(0, 'Tout masquer'), (1, 'Questionnaires Parrainage'), (2, 'Chasse aux parrains'), (3, 'Résultats Parrainage')], default=0),
        ),
        migrations.AddField(
            model_name='affichage',
            name='res_itii',
            field=models.BooleanField(default=False, verbose_name='Afficher les résultats ITII'),
        ),
        migrations.AddField(
            model_name='basequestion',
            name='code_name',
            field=models.CharField(default='code', max_length=50, verbose_name='Nom de code'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='membershipfamily',
            name='remixage',
            field=models.BooleanField(default=False, verbose_name='Membre remixé'),
        ),
        migrations.AlterField(
            model_name='basequestion',
            name='title',
            field=models.CharField(max_length=100, verbose_name='Question'),
        ),
        migrations.AlterField(
            model_name='basequestion',
            name='title_en',
            field=models.CharField(max_length=100, verbose_name='Question (en)'),
        ),
        migrations.AlterField(
            model_name='membershipfamily',
            name='student',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='membershipfamily', to='student.student'),
        ),
        migrations.AlterField(
            model_name='questionfamily',
            name='equivalent',
            field=models.OneToOneField(help_text='Question équivalente dans le questionnaire des membres', on_delete=django.db.models.deletion.CASCADE, to='family.questionmember', verbose_name='Question équivalente'),
        ),
        migrations.CreateModel(
            name='GroupQuestion',
            fields=[
                ('basequestion_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='family.basequestion')),
                ('coeff', models.IntegerField(verbose_name='Coeficient')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='family.questionpage')),
            ],
            options={
                'verbose_name': 'Groupe de Questions',
                'verbose_name_plural': 'Groupes de Questions',
            },
            bases=('family.basequestion',),
        ),
        migrations.AddField(
            model_name='questionmember',
            name='page',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='family.questionpage'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='questionmember',
            name='group',
            field=models.ForeignKey(blank=True, help_text="Renseignez si cette question fait partie d'un             groupe de questions similaires. Tous les champs sont alors             remplis automatiquement, sauf le nom de la question.", null=True, on_delete=django.db.models.deletion.SET_NULL, to='family.groupquestion', verbose_name='Groupe'),
        ),
        migrations.DeleteModel(
            name='QuestionGroup',
        ),
    ]
