# Generated by Django 3.2.4 on 2021-08-06 16:24

import apps.utils.upload
from django.db import migrations, models
import django.db.models.deletion
import django_ckeditor_5.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('student', '0005_auto_20210801_1726'),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Titre')),
                ('title_en', models.CharField(max_length=100, verbose_name='Titre (en)')),
                ('details', models.CharField(blank=True, max_length=200, null=True, verbose_name='Informations supplémentaires')),
                ('details_en', models.CharField(blank=True, max_length=200, null=True, verbose_name='Informations supplémentaires (en)')),
                ('coeff', models.IntegerField(verbose_name='Coeficient')),
            ],
        ),
        migrations.CreateModel(
            name='Family',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Nom du groupe')),
                ('alt_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nom alternatif')),
                ('logo', models.ImageField(blank=True, help_text='Votre logo sera affiché au format 306x306 pixels.', null=True, upload_to=apps.utils.upload.PathAndRename('groups/logo'), verbose_name='Logo du groupe')),
                ('banniere', models.ImageField(blank=True, help_text='Votre bannière sera affichée au format 1320x492 pixels.', null=True, upload_to=apps.utils.upload.PathAndRename('groups/banniere'), verbose_name='Bannière')),
                ('summary', models.CharField(blank=True, max_length=500, null=True, verbose_name='Résumé')),
                ('description', django_ckeditor_5.fields.CKEditor5Field(blank=True, verbose_name='Description du groupe')),
                ('video1', models.URLField(blank=True, null=True, verbose_name='Lien vidéo 1')),
                ('video2', models.URLField(blank=True, null=True, verbose_name='Lien vidéo 2')),
                ('slug', models.SlugField(blank=True, max_length=40, unique=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('year', models.IntegerField(verbose_name='Année de parrainage')),
            ],
            options={
                'verbose_name': 'Famille',
            },
        ),
        migrations.CreateModel(
            name='QuestionGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom du groupe de questions')),
                ('name_en', models.CharField(max_length=100, verbose_name='Nom (en)')),
                ('details', models.CharField(blank=True, max_length=200, null=True, verbose_name='Informations supplémentaires')),
                ('details_en', models.CharField(blank=True, max_length=200, null=True, verbose_name='Infos (en)')),
            ],
            options={
                'verbose_name': 'Groupe de Questions',
                'verbose_name_plural': 'Groupes de Questions',
            },
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField(verbose_name='Valeur')),
                ('text', models.CharField(max_length=50, verbose_name='Texte')),
                ('text_en', models.CharField(max_length=50, verbose_name='Texte (en)')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='family.basequestion')),
            ],
        ),
        migrations.CreateModel(
            name='MembershipFamily',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admin', models.BooleanField(default=False)),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name="Nom de l'étudiant")),
                ('mentor', models.BooleanField(verbose_name='Parrain/Marraine')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='family.family')),
                ('student', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='student.student')),
            ],
            options={
                'verbose_name': 'Membre',
            },
        ),
        migrations.AddField(
            model_name='family',
            name='members',
            field=models.ManyToManyField(through='family.MembershipFamily', to='student.Student'),
        ),
        migrations.CreateModel(
            name='QuestionMember',
            fields=[
                ('basequestion_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='family.basequestion')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='family.questiongroup')),
            ],
            bases=('family.basequestion',),
        ),
        migrations.CreateModel(
            name='QuestionFamily',
            fields=[
                ('basequestion_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='family.basequestion')),
                ('quota', models.IntegerField(help_text='Pourcentage de prise en compte de cette question dans le         calcul des réponses du parrain. 100 supprime la question du questionnaire         parrain (mais pas du questionnaire filleul).', verbose_name='Quota')),
                ('equivalent', models.ForeignKey(help_text='Question équivalente dans le questionnaire des membres', on_delete=django.db.models.deletion.CASCADE, to='family.questionmember', verbose_name='Question équivalente')),
            ],
            options={
                'verbose_name': 'Question Familles',
                'verbose_name_plural': 'Questions Familles',
            },
            bases=('family.basequestion',),
        ),
        migrations.CreateModel(
            name='AnswerMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.IntegerField()),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='family.membershipfamily')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='family.questionmember')),
            ],
            options={
                'verbose_name': 'Réponse',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AnswerFamily',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.IntegerField()),
                ('family', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='family.family')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='family.questionfamily')),
            ],
            options={
                'verbose_name': 'Réponse',
                'abstract': False,
            },
        ),
    ]
