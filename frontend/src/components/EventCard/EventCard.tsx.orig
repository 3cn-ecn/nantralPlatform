/* eslint-disable camelcase */
import * as React from 'react';
import './EventCard.scss';

import {
  Card,
  CardContent,
  CardMedia,
  CircularProgress,
  Typography,
  Avatar,
  CardActionArea,
} from '@mui/material/';

import { EventProps } from 'Props/Event';
import { ClubProps } from 'Props/Club';
import CalendarTodayIcon from '@mui/icons-material/CalendarToday';

import AccessTimeIcon from '@mui/icons-material/AccessTime';
import axios from 'axios';
import i18next from 'i18next';
import { useEffect, useRef } from 'react';
import JoinButton from '../Button/JoinButton';

import FavButton from '../Button/FavButton';
import MoreActionsButton from '../Button/MoreActionsButton';

function InfoItem(props: { name: string; value: string }) {
  let icon = null;
  const { name, value } = props;
  const text = value;

  switch (name) {
    case 'date':
      icon = (
        <CalendarTodayIcon
          sx={{ fontSize: '1.7em' }}
          className="infoItemElement"
        />
      );
      break;
    case 'time':
      icon = (
        <AccessTimeIcon
          sx={{ fontSize: '1.7em' }}
          className="infoItemElement"
        />
      );
      break;
    default:
  }
  return (
    <div className="infoItem">
      {icon}
      <Typography
        sx={{ fontSize: '1em' }}
        variant="subtitle2"
        className="infoItemElement"
        style={{ paddingLeft: '7px' }}
      >
        {text}
      </Typography>
    </div>
  );
}

<<<<<<< HEAD
function EventCard(props: { event: EventProps; width: string }) {
  const ref = useRef<HTMLHeadingElement>(null);

  // Scale of the font (multiplier of the browser's base font size)
  const [scale, setScale] = React.useState<number>(1);

  // Get the desired size of this component, so the font size and icons are adapted correctly
  useEffect(() => {
    const rem: number = parseFloat(
      getComputedStyle(document.documentElement).fontSize
    );
    console.log('width', ref.current ? ref.current.offsetWidth : 0);
    if (ref.current) {
      setScale(ref.current.offsetWidth / (rem * 28.125));
    }
  }, [ref.current]);

  const { event, width } = props;
=======
function EventCard(props: { event: EventProps }) {
  const { event } = props;
>>>>>>> react-app
  const {
    title,
    numberOfParticipants,
    maxParticipant,
    beginDate,
    image,
    groupSlug,
    isParticipating,
    slug,
    formUrl,
    isFavorite,
    getAbsoluteUrl,
    endInscription,
    beginInscription,
    groupName,
  } = event;
  const [participating, setParticipating] = React.useState(isParticipating);
  const [groupData, setGroup] = React.useState<ClubProps>({
    name: '',
    icon: '',
    url: '',
    is_admin: false,
  });
  React.useEffect(() => {
    getGroup();
  }, []);

  async function getGroup() {
    const response = await axios.get(`/api/group/group/${groupSlug}/`);
    setGroup(response.data);
  }

  let variant: 'shotgun' | 'normal' | 'form'; // Variant of the event : form, normal or shotgun
  if (formUrl !== null) variant = 'form';
  else if (maxParticipant === null) variant = 'normal';
  else variant = 'shotgun';

  // Conversion of the date to a human redeable format
  const dateValue = new Date(beginDate);
  const dateFormat: Intl.DateTimeFormatOptions = {
    weekday: 'long',
    month: 'long',
    day: 'numeric',
  };
  const dateText = dateValue.toLocaleDateString(i18next.language, dateFormat);
  const hourText = dateValue.toLocaleTimeString(i18next.language, {
    timeStyle: 'short',
  });
  const groupIcon =
    typeof groupData.icon === 'undefined' ? (
      <CircularProgress size="3.75em" />
    ) : (
      <a href={window.location.origin + groupData.url}>
        <Avatar
          alt={groupData.name}
          src={groupData.icon}
          sx={{ fontSize: '1em', width: '3.75em', height: '3.75em' }}
        />
      </a>
    );
  return (
<<<<<<< HEAD
    <div ref={ref} style={{ width: `${width}` }}>
      <Card sx={{ fontSize: `${scale}rem` }}>
        <CardActionArea disableRipple className="eventCard">
          <CardMedia
            className="banner"
            component="img"
            image={image}
            alt="Banner"
          />
          <FavButton
            className="favIcon"
            eventSlug={slug}
            selected={is_favorite}
            size="3em"
          />
          <MoreActionsButton
            isAdmin={groupData.is_current_user_admin}
            className="moreActions"
            shareUrl={window.location.origin + get_absolute_url}
            slug={slug}
            size="2em"
            participating={participating}
            setParticipating={setParticipating}
          />
          <CardContent sx={{ padding: 0 }}>
            <div className="infoContainer">
              <div className="infoMain">
                <div className="groupIcon">{groupIcon}</div>

                <div className="infos">
                  <Typography
                    sx={{ fontSize: '1.8em' }}
                    variant="h5"
                    className="eventTitle"
                  >
                    {title}
                  </Typography>
                  <Typography sx={{ fontSize: '1.1em' }} variant="caption">
                    {get_group_name}
                  </Typography>
                </div>
              </div>
              <div className="infoDetails">
                <InfoItem name="date" value={dateText} />
                <InfoItem name="time" value={hourText} />
                <div className="joinButton">
                  <JoinButton
                    variant={variant}
                    person={number_of_participants}
                    maxPerson={max_participant}
                    participating={participating}
                    eventSlug={slug}
                    link={ticketing}
                    beginInscription={begin_inscription}
                    endInscription={end_inscription}
                    setParticipating={setParticipating}
                  />
                </div>
              </div>
            </div>
          </CardContent>
        </CardActionArea>
      </Card>
    </div>
  );
}

EventCard.defaultProps = {};

=======
    <Card className="eventCard">
      <CardActionArea disableRipple sx={{ fontSize: '1em' }}>
        <CardMedia
          className="banner"
          component="img"
          image={image}
          alt="Banner"
        />
        <FavButton
          className="favIcon"
          eventSlug={slug}
          selected={isFavorite}
          size="3em"
        />
        <MoreActionsButton
          isAdmin={groupData.is_admin}
          className="moreActions"
          shareUrl={window.location.origin + getAbsoluteUrl}
          slug={slug}
          size="2em"
          participating={participating}
          setParticipating={setParticipating}
        />
        <CardContent sx={{ padding: 0 }}>
          <div className="infoContainer">
            <div className="infoMain">
              <div className="groupIcon">{groupIcon}</div>

              <div className="infos">
                <Typography variant="h5" className="eventTitle">
                  {title}
                </Typography>
                <Typography variant="caption">{groupName}</Typography>
              </div>
            </div>
            <div className="infoDetails">
              <InfoItem name="date" value={dateText} />
              <InfoItem name="time" value={hourText} />
              <div className="joinButton">
                <JoinButton
                  variant={variant}
                  person={numberOfParticipants}
                  maxPerson={maxParticipant}
                  participating={participating}
                  eventSlug={slug}
                  link={formUrl}
                  beginInscription={beginInscription}
                  endInscription={endInscription}
                  setParticipating={setParticipating}
                />
              </div>
            </div>
          </div>
        </CardContent>
      </CardActionArea>
    </Card>
  );
}

>>>>>>> react-app
export default EventCard;
