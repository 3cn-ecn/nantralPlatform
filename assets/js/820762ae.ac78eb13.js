"use strict";(self.webpackChunknantralplatform_docs=self.webpackChunknantralplatform_docs||[]).push([[1570],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),p=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(o.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,o=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=p(n),m=r,h=d["".concat(o,".").concat(m)]||d[m]||c[m]||s;return n?a.createElement(h,l(l({ref:t},u),{},{components:n})):a.createElement(h,l({ref:t},u))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,l=new Array(s);l[0]=m;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i[d]="string"==typeof e?e:r,l[1]=i;for(var p=2;p<s;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2335:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>c,frontMatter:()=>s,metadata:()=>i,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const s={last_update:{date:"2023-02-23 12:50:35 +0100",author:"Alexis Delage"},sidebar_position:7},l="Tests",i={unversionedId:"dev/guides/tests",id:"dev/guides/tests",title:"Tests",description:"Write tests",source:"@site/docs/dev/guides/tests.md",sourceDirName:"dev/guides",slug:"/dev/guides/tests",permalink:"/dev/guides/tests",draft:!1,editUrl:"https://github.com/3cn-ecn/nantralPlatform/tree/master/docs/docs/dev/guides/tests.md",tags:[],version:"current",lastUpdatedBy:"Alexis Delage",lastUpdatedAt:1677153035,formattedLastUpdatedAt:"Feb 23, 2023",sidebarPosition:7,frontMatter:{last_update:{date:"2023-02-23 12:50:35 +0100",author:"Alexis Delage"},sidebar_position:7},sidebar:"sidebar",previous:{title:"I18n",permalink:"/dev/guides/i18n"},next:{title:"Debugging",permalink:"/dev/guides/debugging"}},o={},p=[{value:"Write tests",id:"write-tests",level:2},{value:"With django (on the back end)",id:"with-django-on-the-back-end",level:3},{value:"With jest for React (on the front end)",id:"with-jest-for-react-on-the-front-end",level:3},{value:"Run tests",id:"run-tests",level:2},{value:"Run tests on the back end",id:"run-tests-on-the-back-end",level:3},{value:"Run unit tests on the front end",id:"run-unit-tests-on-the-front-end",level:3},{value:"Run other tests on the front end",id:"run-other-tests-on-the-front-end",level:3}],u={toc:p},d="wrapper";function c(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"tests"},"Tests"),(0,r.kt)("h2",{id:"write-tests"},"Write tests"),(0,r.kt)("h3",{id:"with-django-on-the-back-end"},"With django (on the back end)"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"All tests should be written in a ",(0,r.kt)("inlineCode",{parentName:"li"},"tests.py")," file, or in a ",(0,r.kt)("inlineCode",{parentName:"li"},"tests/")," folder."),(0,r.kt)("li",{parentName:"ul"},"You should test ideally all API routes, especially for the permissions.")),(0,r.kt)("h3",{id:"with-jest-for-react-on-the-front-end"},"With jest for React (on the front end)"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"All tests should be written in files with the suffix ",(0,r.kt)("inlineCode",{parentName:"li"},".test.ts")," or ",(0,r.kt)("inlineCode",{parentName:"li"},".test.tsx"),"."),(0,r.kt)("li",{parentName:"ul"},"Do not test every component: only test ",(0,r.kt)("em",{parentName:"li"},"Pages"),", and complex functions that can\neasily break."),(0,r.kt)("li",{parentName:"ul"},"Test the user experience (like clicking a button should make this text appear,\netc.). Refer to the guides for React of the ",(0,r.kt)("em",{parentName:"li"},"Testing Library")," project.")),(0,r.kt)("h2",{id:"run-tests"},"Run tests"),(0,r.kt)("p",null,"You can test your code globally by running in the ",(0,r.kt)("inlineCode",{parentName:"p"},"nantralPlatform")," folder:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"make test\n")),(0,r.kt)("h3",{id:"run-tests-on-the-back-end"},"Run tests on the back end"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"on the whole back end:",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"pipenv run test\n"))),(0,r.kt)("li",{parentName:"ul"},"on a specific app of the backend:",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"pipenv run test <path>\n")),"where ",(0,r.kt)("inlineCode",{parentName:"li"},"<path>")," is the path of the app, for example ",(0,r.kt)("inlineCode",{parentName:"li"},"apps.group"))),(0,r.kt)("h3",{id:"run-unit-tests-on-the-front-end"},"Run unit tests on the front end"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"on the whole front end:",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm run jest\n"))),(0,r.kt)("li",{parentName:"ul"},"on a specific file",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm run jest <path>\n")),"where ",(0,r.kt)("inlineCode",{parentName:"li"},"<path>")," is a regex, for example you can use ",(0,r.kt)("inlineCode",{parentName:"li"},"npm run jest Home")," to run\nthe file ",(0,r.kt)("inlineCode",{parentName:"li"},"Home.page.test.tsx")),(0,r.kt)("li",{parentName:"ul"},"update a snapshot",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm run jest:u <path>\n")))),(0,r.kt)("h3",{id:"run-other-tests-on-the-front-end"},"Run other tests on the front end"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Linting:",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm run lint\n"))),(0,r.kt)("li",{parentName:"ul"},"Typing:",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm run types\n")))))}c.isMDXComponent=!0}}]);