"use strict";(self.webpackChunknantralplatform_docs=self.webpackChunknantralplatform_docs||[]).push([[6828],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=p(n),h=r,m=d["".concat(l,".").concat(h)]||d[h]||c[h]||s;return n?a.createElement(m,o(o({ref:t},u),{},{components:n})):a.createElement(m,o({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,o=new Array(s);o[0]=h;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[d]="string"==typeof e?e:r,o[1]=i;for(var p=2;p<s;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},5312:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>s,metadata:()=>i,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const s={sidebar_position:3,last_update:{date:"2023-10-20 10:06:28 +0200",author:"Alexis Delage"}},o="Integration Tests",i={unversionedId:"dev/guides/tests/integration-tests",id:"dev/guides/tests/integration-tests",title:"Integration Tests",description:"Integration tests allows us to test the features of the code.",source:"@site/docs/dev/guides/tests/integration-tests.md",sourceDirName:"dev/guides/tests",slug:"/dev/guides/tests/integration-tests",permalink:"/dev/guides/tests/integration-tests",draft:!1,editUrl:"https://github.com/3cn-ecn/nantralPlatform/tree/master/docs/docs/dev/guides/tests/integration-tests.md",tags:[],version:"current",lastUpdatedBy:"Alexis Delage",lastUpdatedAt:1697789188,formattedLastUpdatedAt:"Oct 20, 2023",sidebarPosition:3,frontMatter:{sidebar_position:3,last_update:{date:"2023-10-20 10:06:28 +0200",author:"Alexis Delage"}},sidebar:"sidebar",previous:{title:"Linting and Formatting",permalink:"/dev/guides/tests/linting"},next:{title:"Debugging",permalink:"/dev/guides/debugging"}},l={},p=[{value:"Philosophy",id:"philosophy",level:2},{value:"Run tests",id:"run-tests",level:2},{value:"On the back end",id:"on-the-back-end",level:3},{value:"On the front end",id:"on-the-front-end",level:3},{value:"Write tests",id:"write-tests",level:2},{value:"With django (on the back end)",id:"with-django-on-the-back-end",level:3},{value:"With jest for React (on the front end)",id:"with-jest-for-react-on-the-front-end",level:3}],u={toc:p},d="wrapper";function c(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"integration-tests"},"Integration Tests"),(0,r.kt)("p",null,"Integration tests allows us to test the features of the code."),(0,r.kt)("p",null,"This is an important thing to do, to avoid regressions (if we add a new feature,\nwe should be sure that previous features still work)."),(0,r.kt)("h2",{id:"philosophy"},"Philosophy"),(0,r.kt)("p",null,"A good integration test is a test that reproduces the user experience."),(0,r.kt)("p",null,"For example, on the back end, we must have test that calls the API routes\nand check that the returned objects are correct. We also have to test the\npermissions and the error messages."),(0,r.kt)("p",null,"On the front end, integration tests should reproduce the user experience,\nby simulating clicks on button, fill-in forms, etc., and watch the result."),(0,r.kt)("h2",{id:"run-tests"},"Run tests"),(0,r.kt)("h3",{id:"on-the-back-end"},"On the back end"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"on the whole back end:",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"pipenv run test\n"))),(0,r.kt)("li",{parentName:"ul"},"on a specific app of the backend:",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"pipenv run test <path>\n")),"where ",(0,r.kt)("inlineCode",{parentName:"li"},"<path>")," is the path of the app, for example ",(0,r.kt)("inlineCode",{parentName:"li"},"apps.group"))),(0,r.kt)("h3",{id:"on-the-front-end"},"On the front end"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"on the whole front end:",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm run jest\n"))),(0,r.kt)("li",{parentName:"ul"},"on a specific file",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm run jest <path>\n")),"where ",(0,r.kt)("inlineCode",{parentName:"li"},"<path>")," is a regex, for example you can use ",(0,r.kt)("inlineCode",{parentName:"li"},"npm run jest Home")," to run\nthe file ",(0,r.kt)("inlineCode",{parentName:"li"},"Home.page.test.tsx"))),(0,r.kt)("h2",{id:"write-tests"},"Write tests"),(0,r.kt)("h3",{id:"with-django-on-the-back-end"},"With django (on the back end)"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"All tests should be written in a ",(0,r.kt)("inlineCode",{parentName:"li"},"tests.py")," file, or in a ",(0,r.kt)("inlineCode",{parentName:"li"},"tests/")," folder."),(0,r.kt)("li",{parentName:"ul"},"You should test ideally all API routes, especially for the permissions.")),(0,r.kt)("h3",{id:"with-jest-for-react-on-the-front-end"},"With jest for React (on the front end)"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"All tests should be written in files with the suffix ",(0,r.kt)("inlineCode",{parentName:"li"},".test.ts")," or ",(0,r.kt)("inlineCode",{parentName:"li"},".test.tsx"),"."),(0,r.kt)("li",{parentName:"ul"},"Do not test every component: only test ",(0,r.kt)("em",{parentName:"li"},"Pages"),", and complex functions that can\neasily break."),(0,r.kt)("li",{parentName:"ul"},"Test the user experience (like clicking a button should make this text appear,\netc.). Refer to the guides for React of the ",(0,r.kt)("em",{parentName:"li"},"Testing Library")," project."),(0,r.kt)("li",{parentName:"ul"},"You can make snapshots if you think that's useful, but don't use too many of\nthem. To update a snapshot, run:",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm run jest:u <path>\n")))))}c.isMDXComponent=!0}}]);