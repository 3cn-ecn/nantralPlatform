"use strict";(self.webpackChunknantralplatform_docs=self.webpackChunknantralplatform_docs||[]).push([[1748],{3328:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"dev/backend/dependencies","title":"Dependencies (Pipenv)","description":"A little discussion about the nightmare of all developers...","source":"@site/docs/dev/backend/dependencies.mdx","sourceDirName":"dev/backend","slug":"/dev/backend/dependencies","permalink":"/dev/backend/dependencies","draft":false,"unlisted":false,"editUrl":"https://github.com/3cn-ecn/nantralPlatform/tree/master/docs/docs/dev/backend/dependencies.mdx","tags":[],"version":"current","lastUpdatedBy":"Alexis Delage","lastUpdatedAt":1712699007000,"sidebarPosition":7,"frontMatter":{"sidebar_position":7},"sidebar":"sidebar","previous":{"title":"Send Emails","permalink":"/dev/backend/emails"},"next":{"title":"Debugging","permalink":"/dev/backend/debugging"}}');var t=s(4848),d=s(8453);const a={sidebar_position:7},c="Dependencies (Pipenv)",o={},l=[{value:"Concept",id:"concept",level:2},{value:"Add Dependencies",id:"add-dependencies",level:2},{value:"Update Dependencies",id:"update-dependencies",level:2},{value:"See outdated dependencies",id:"see-outdated-dependencies",level:2},{value:"Security issues",id:"security-issues",level:2}];function r(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,d.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"dependencies-pipenv",children:"Dependencies (Pipenv)"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"A little discussion about the nightmare of all developers..."})}),"\n",(0,t.jsxs)(n.p,{children:["To manage our dependencies, we use ",(0,t.jsx)(n.a,{href:"https://pipenv.pypa.io/en/latest/",children:(0,t.jsx)(n.strong,{children:"Pipenv"})}),".\nPipenv replaces 3 different things:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"pip"})," for the installation of packages;"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"virtualenv"})," for the isolation of the environment;"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"requirements.txt"})," for the list of dependencies."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"concept",children:"Concept"}),"\n",(0,t.jsxs)(n.p,{children:["Pipenv is based on a file named ",(0,t.jsx)(n.code,{children:"Pipfile"})," and a lock file named ",(0,t.jsx)(n.code,{children:"Pipfile.lock"}),".\nThe ",(0,t.jsx)(n.code,{children:"Pipfile"})," is used to list the dependencies needed for the project,\nand which versions of each package are required. Then, Pipenv will take this\nconfig to find all the dependencies and sub-dependencies of each package, and\ntry to find the latest version of each package which is compatible with all the\nother packages. Once this problem is solved, it will the list of all packages\nand their exact version into the lock file."]}),"\n",(0,t.jsx)(n.h2,{id:"add-dependencies",children:"Add Dependencies"}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["You can search for packages on the ",(0,t.jsx)(n.a,{href:"https://pypi.org/",children:"Python Package Index"}),"."]})}),"\n",(0,t.jsxs)(n.p,{children:["Add a dependency (for example ",(0,t.jsx)(n.code,{children:"numpy"}),"):"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"pipenv install numpy~=1.20\n"})}),"\n",(0,t.jsx)(n.p,{children:"Add a dev dependency (i.e. a package used for testing only):"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"pipenv install --dev <package_name>\n"})}),"\n",(0,t.jsx)(n.p,{children:"Remove a dependency:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"pipenv uninstall <package_name>\n"})}),"\n",(0,t.jsxs)(n.admonition,{title:"Semantic Versioning",type:"warning",children:[(0,t.jsxs)(n.p,{children:["Always indicate the version when adding a package to your project.\nBy default, Pipenv will use ",(0,t.jsx)(n.code,{children:"*"})," for the version in the ",(0,t.jsx)(n.code,{children:"Pipfile"}),', which means\n"any version". This is not a good practice, because you can\'t be sure that the\nlatest version of the package will be installed.']}),(0,t.jsxs)(n.p,{children:["To indicate the version, it's better to use the ",(0,t.jsx)(n.code,{children:"~=[major].[minor]"})," syntax\n(and ",(0,t.jsx)(n.strong,{children:"not"})," the ",(0,t.jsx)(n.code,{children:"~=[major].[minor].[patch]"})," syntax, with the 3rd number).\nTo know why, ",(0,t.jsx)(n.a,{href:"https://pipenv.pypa.io/en/latest/specifiers.html#specifying-versions-of-a-package",children:"check the docs"}),"."]})]}),"\n",(0,t.jsx)(n.h2,{id:"update-dependencies",children:"Update Dependencies"}),"\n",(0,t.jsxs)(n.p,{children:["After you edit the ",(0,t.jsx)(n.strong,{children:"Pipfile"}),", or when the last update was too old and you\nneed to update your packages, you have to update the ",(0,t.jsx)(n.strong,{children:"lock file"})," with the last\nversions to correct security issues for example."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"pipenv update --dev\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsxs)(n.p,{children:["This command will only update the ",(0,t.jsx)(n.strong,{children:"lock file"}),", but not the ",(0,t.jsx)(n.strong,{children:"Pipfile"}),":\nif you set an old version of a package in your Pipfile, it will keep the old\nversion to respect the Pipfile."]})}),"\n",(0,t.jsx)(n.h2,{id:"see-outdated-dependencies",children:"See outdated dependencies"}),"\n",(0,t.jsxs)(n.p,{children:["Since the ",(0,t.jsx)(n.code,{children:"update"})," command does not really update all the packages, we need\na command to see the outdated packages. The output of the command will tell\nyou if you can update directly a package with an ",(0,t.jsx)(n.code,{children:"update"})," command, or if you\nneed to edit the config file before."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"pipenv update --outdated\n"})}),"\n",(0,t.jsx)(n.h2,{id:"security-issues",children:"Security issues"}),"\n",(0,t.jsx)(n.p,{children:"To see all the security issues:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"pipenv check\n"})}),"\n",(0,t.jsx)(n.p,{children:"Sometimes, one of your dependencies has a security issue. In this case,\nyou need to update it as soon as possible to prevent any security issue in your\nproject."}),"\n",(0,t.jsx)(n.p,{children:"There are 3 cases:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"A patch has been released and you can update the package"}),": you're fine,\njust do the update!"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"A patch has been released but you have other dependencies that use this\npackage and they did not update yet"}),": wait a little bit that the parent\npackage update its dependencies, and then see case n\xb01. If a package takes\ntoo much time to update its dependencies, then see n\xb03."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"No patch has been released"}),": you'll have a lot of work to do, sorry \ud83d\ude22\nYou need to remove this dependency from your project, and try to find\nanother one that can replace the package."]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(r,{...e})}):r(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>c});var i=s(6540);const t={},d=i.createContext(t);function a(e){const n=i.useContext(d);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(d.Provider,{value:n},e.children)}}}]);