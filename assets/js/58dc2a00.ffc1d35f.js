"use strict";(self.webpackChunknantralplatform_docs=self.webpackChunknantralplatform_docs||[]).push([[3940],{7676:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>a,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var t=s(4848),o=s(8453);const i={sidebar_position:3,description:"Style your app!"},r="Styling",l={id:"dev/frontend/styling",title:"Styling",description:"Style your app!",source:"@site/docs/dev/frontend/styling.mdx",sourceDirName:"dev/frontend",slug:"/dev/frontend/styling",permalink:"/dev/frontend/styling",draft:!1,unlisted:!1,editUrl:"https://github.com/3cn-ecn/nantralPlatform/tree/master/docs/docs/dev/frontend/styling.mdx",tags:[],version:"current",lastUpdatedBy:"Alexis Delage",lastUpdatedAt:1712699007e3,sidebarPosition:3,frontMatter:{sidebar_position:3,description:"Style your app!"},sidebar:"sidebar",previous:{title:"Use the API",permalink:"/dev/frontend/use-api"},next:{title:"Translations (i18n)",permalink:"/dev/frontend/i18n"}},d={},c=[{value:"Rule 1: don&#39;t use styles",id:"rule-1-dont-use-styles",level:2},{value:"The exception rule: use <code>sx</code> props for <code>padding</code> only",id:"the-exception-rule-use-sx-props-for-padding-only",level:2},{value:"Can I use HTML tags (<code>div</code>, <code>h1</code>...)?",id:"can-i-use-html-tags-div-h1",level:2},{value:"Ok I understand, but I need custom styles",id:"ok-i-understand-but-i-need-custom-styles",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"styling",children:"Styling"})}),"\n",(0,t.jsx)(n.h2,{id:"rule-1-dont-use-styles",children:"Rule 1: don't use styles"}),"\n",(0,t.jsxs)(n.p,{children:["In Nantral Platform, we use the ",(0,t.jsx)(n.a,{href:"https://mui.com/",children:(0,t.jsx)(n.strong,{children:"MUI"})})," library to style our\ncomponents. This means that all styling things are managed by the library,\nand we only configure it through the ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"theme.ts"})})," file."]}),"\n",(0,t.jsxs)(n.admonition,{title:"How to style, then?",type:"tip",children:[(0,t.jsxs)(n.p,{children:["If you need to style something, first use this ",(0,t.jsx)(n.strong,{children:"check-list"})," to ensure you are\nnot doing something wrong:"]}),(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Check if the component you need does not already exist:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["in the ",(0,t.jsx)(n.a,{href:"https://mui.com/material-ui/all-components/",children:(0,t.jsx)(n.strong,{children:"MUI Components library"})}),";"]}),"\n",(0,t.jsxs)(n.li,{children:["or in the ",(0,t.jsx)(n.code,{children:"frontend/src/shared/components"})," folder."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["If you want to ",(0,t.jsx)(n.strong,{children:"modify the styles"})," of one component:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["you are ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.em,{children:"breaking"})})," the design system => try to use the current\n",(0,t.jsx)(n.strong,{children:"theme"}),", or update the theme (you can modify it or extend it);"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["If the component does not exist, then ",(0,t.jsx)(n.strong,{children:"create it"})," in the shared folder (but use\ntheme variables to style it)!"]}),"\n"]})]}),"\n",(0,t.jsxs)(n.h2,{id:"the-exception-rule-use-sx-props-for-padding-only",children:["The exception rule: use ",(0,t.jsx)(n.code,{children:"sx"})," props for ",(0,t.jsx)(n.code,{children:"padding"})," only"]}),"\n",(0,t.jsx)(n.p,{children:"Well, this rule is pretty clear \ud83d\ude01 But why is that, you might ask?"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["for ",(0,t.jsx)(n.code,{children:"margins"}),", it is better to replace them with ",(0,t.jsx)(n.code,{children:"<Spacer>"})," components, or\nby using ",(0,t.jsx)(n.code,{children:"gap"})," in ",(0,t.jsx)(n.code,{children:"<FlexRow>"})," or ",(0,t.jsx)(n.code,{children:"<FlexColumn>"})," components;"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"width"})," and ",(0,t.jsx)(n.code,{children:"height"})," should be fixed by the grid your component is in, not on\nthe component itself;"]}),"\n",(0,t.jsxs)(n.li,{children:["other styling properties (like ",(0,t.jsx)(n.code,{children:"color"}),", ",(0,t.jsx)(n.code,{children:"background"}),", ",(0,t.jsx)(n.code,{children:"border"}),", etc.) should\nbe managed by the theme."]}),"\n"]}),"\n",(0,t.jsxs)(n.h2,{id:"can-i-use-html-tags-div-h1",children:["Can I use HTML tags (",(0,t.jsx)(n.code,{children:"div"}),", ",(0,t.jsx)(n.code,{children:"h1"}),"...)?"]}),"\n",(0,t.jsx)(n.p,{children:"\u274c No."}),"\n",(0,t.jsxs)(n.p,{children:["Ideally, you should always use the ",(0,t.jsx)(n.code,{children:"MUI"})," equivalents of HTML tags:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"div"})," => ",(0,t.jsx)(n.code,{children:"Box"}),", ",(0,t.jsx)(n.code,{children:"Container"}),", ",(0,t.jsx)(n.code,{children:"FlexRow"}),", ..."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"a"})," => ",(0,t.jsx)(n.code,{children:"Link"}),", with ",(0,t.jsx)(n.code,{children:"component={ReactRouterLink}"}),"\n(cf ",(0,t.jsx)(n.a,{href:"https://reactrouter.com/en/main/components/link",children:"React Router"}),")\nif the link is internal"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"p"})," => ",(0,t.jsx)(n.code,{children:"Typography"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"h1"})," => ",(0,t.jsx)(n.code,{children:"Typography"})," with ",(0,t.jsx)(n.code,{children:'variant="h1"'})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The reason of that is to ensure that the components are ",(0,t.jsx)(n.strong,{children:"styled correctly"}),",\nand ",(0,t.jsx)(n.strong,{children:"respect"})," the MUI theme."]}),"\n",(0,t.jsxs)(n.p,{children:["The only exception to this principle is ",(0,t.jsx)(n.code,{children:"<img>"}),", because there is no equivalent\nin MUI (and also no need)."]}),"\n",(0,t.jsx)(n.h2,{id:"ok-i-understand-but-i-need-custom-styles",children:"Ok I understand, but I need custom styles"}),"\n",(0,t.jsx)(n.p,{children:"Ok, if you need custom styles, you can use these options:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["preferably, use the ",(0,t.jsx)(n.code,{children:"sx"})," props with theme variables from the ",(0,t.jsx)(n.code,{children:"useTheme"})," hook\nto add CSS properties:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import { useTheme } from '@mui/material/styles';\n\nconst theme = useTheme();\nconst sx: SxProps = {\n   color: theme.palette.primary.main,\n   padding: theme.spacing(2),\n};\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["if the component does not have a ",(0,t.jsx)(n.code,{children:"sx"})," prop (it exists only on MUI components),\nyou can use the ",(0,t.jsx)(n.code,{children:"style"})," prop;"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["if your CSS is too complex, you can create a new ",(0,t.jsx)(n.strong,{children:"SCSS file"})," and add your\nstyles there. However, it has some limitations:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["you ",(0,t.jsx)(n.strong,{children:"can't use theme"})," variables from MUI;"]}),"\n",(0,t.jsxs)(n.li,{children:["on the build phase, all ",(0,t.jsx)(n.code,{children:"CSS"})," and ",(0,t.jsx)(n.code,{children:"SCSS"})," files will be ",(0,t.jsx)(n.strong,{children:"merged"})," together,\nso you should be ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.em,{children:"very"})})," careful with the class names you use."]}),"\n"]}),"\n"]}),"\n"]})]})}function a(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>l});var t=s(6540);const o={},i=t.createContext(o);function r(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);