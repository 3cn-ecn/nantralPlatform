"use strict";(self.webpackChunknantralplatform_docs=self.webpackChunknantralplatform_docs||[]).push([[6603],{288:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var o=n(5893),r=n(1151);const i={sidebar_position:2},a="Daily workflow",s={id:"dev/guides/git/daily-workflow",title:"Daily workflow",description:"Here is a typical workflow for contributing on the project with Git.",source:"@site/docs/dev/guides/git/daily-workflow.md",sourceDirName:"dev/guides/git",slug:"/dev/guides/git/daily-workflow",permalink:"/dev/guides/git/daily-workflow",draft:!1,unlisted:!1,editUrl:"https://github.com/3cn-ecn/nantralPlatform/tree/master/docs/docs/dev/guides/git/daily-workflow.md",tags:[],version:"current",lastUpdatedBy:"Alexis Delage",lastUpdatedAt:1697123156,formattedLastUpdatedAt:"Oct 12, 2023",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"sidebar",previous:{title:"Tutorial for GitHub Desktop",permalink:"/dev/guides/git/tutorial"},next:{title:"Frameworks",permalink:"/dev/guides/frameworks/"}},c={},l=[{value:"1. Create a ticket",id:"1-create-a-ticket",level:2},{value:"2. Create a new branch",id:"2-create-a-new-branch",level:2},{value:"3. Code",id:"3-code",level:2},{value:"4. Create a pull request",id:"4-create-a-pull-request",level:2},{value:"5. Merge your PR!",id:"5-merge-your-pr",level:2},{value:"\ud83d\udedf F.A.Q.",id:"-faq",level:2},{value:"Should I use <em>merge</em> or <em>squash</em> to validate my Pull Request?",id:"should-i-use-merge-or-squash-to-validate-my-pull-request",level:3},{value:"Someone has push new commits on the master branch, how to update my branch?",id:"someone-has-push-new-commits-on-the-master-branch-how-to-update-my-branch",level:3}];function h(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"daily-workflow",children:"Daily workflow"}),"\n",(0,o.jsx)(t.p,{children:"Here is a typical workflow for contributing on the project with Git."}),"\n",(0,o.jsx)(t.h2,{id:"1-create-a-ticket",children:"1. Create a ticket"}),"\n",(0,o.jsxs)(t.p,{children:["Before beginning to code, you must decide ",(0,o.jsx)(t.strong,{children:(0,o.jsx)(t.em,{children:"what"})})," you will code: for this,\ncreate a new ticket on the ",(0,o.jsx)(t.a,{href:"https://github.com/3cn-ecn/nantralPlatform/issues",children:"GitHub repository"}),"."]}),"\n",(0,o.jsx)(t.p,{children:"Your ticket should describe:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"what you will change,"}),"\n",(0,o.jsx)(t.li,{children:"which criteria someone can check to validate your ticket when you will have finished to code,"}),"\n",(0,o.jsxs)(t.li,{children:["a design or mock-up of the interfaces you will create (you can use for example ",(0,o.jsx)(t.a,{href:"https://excalidraw.com/",children:"Excalidraw"}),"),"]}),"\n",(0,o.jsx)(t.li,{children:"the changes you will make on the database,"}),"\n",(0,o.jsx)(t.li,{children:"the different steps you will follow to code."}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"2-create-a-new-branch",children:"2. Create a new branch"}),"\n",(0,o.jsx)(t.p,{children:"Then, you can create a branch a new branch from the issue:"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{src:n(805).Z+"",width:"1788",height:"1462"})}),"\n",(0,o.jsx)(t.p,{children:"and then switch to this new branch in VS code (or use GitHub Desktop):"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"git checkout <my-new-branch>\n"})}),"\n",(0,o.jsx)(t.h2,{id:"3-code",children:"3. Code"}),"\n",(0,o.jsx)(t.p,{children:"Time to code! This part is up to you now ^^"}),"\n",(0,o.jsx)(t.p,{children:"Do not forget to make multiple commits during your work: a commit should be\na small step during your work, and help you to go back if you make a mistake.\nThey also can help another developer to review your code later, so be sure to\nname them explicitly!"}),"\n",(0,o.jsx)(t.h2,{id:"4-create-a-pull-request",children:"4. Create a pull request"}),"\n",(0,o.jsxs)(t.p,{children:["When you have finished to code, you can create a pull request on GitHub: simply\ngo to the ",(0,o.jsx)(t.em,{children:"Pull Request"})," tab, and create a new one from your branch to the\n",(0,o.jsx)(t.code,{children:"master"})," branch."]}),"\n",(0,o.jsx)(t.p,{children:"Describe your changes in the pull request, and read all your code a second\ntime: this will help you to catch frequent bugs. Wait for the tests to pass:\nif a test fails, check which test has failed and try to understand why."}),"\n",(0,o.jsx)(t.h2,{id:"5-merge-your-pr",children:"5. Merge your PR!"}),"\n",(0,o.jsx)(t.p,{children:"If everything is ok, ask someone to review your code. It is always better\nfor the code to be reviewed twice: one time by the author (you!), and the\nsecond time by someone else."}),"\n",(0,o.jsx)(t.p,{children:"Then, once your PR is approved, you can merge it! Congratulations, you have\ncontributed to Nantral Platform! \ud83e\udd73"}),"\n",(0,o.jsx)(t.h2,{id:"-faq",children:"\ud83d\udedf F.A.Q."}),"\n",(0,o.jsxs)(t.h3,{id:"should-i-use-merge-or-squash-to-validate-my-pull-request",children:["Should I use ",(0,o.jsx)(t.em,{children:"merge"})," or ",(0,o.jsx)(t.em,{children:"squash"})," to validate my Pull Request?"]}),"\n",(0,o.jsx)(t.p,{children:"You can use either you want, but consider this:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"squash"})," is better because it will keep the history clean, and will avoid\nto have a lot of commits in the history. However, you can't add new commits\non your branch when the commits are squashed, so you have to immediately\ndelete your branch and create a new one if you see some bugs in production."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"merge"})," is more sure, but it keeps all the commits in the history and it\ncan be a mess later."]}),"\n"]}),"\n",(0,o.jsx)(t.h3,{id:"someone-has-push-new-commits-on-the-master-branch-how-to-update-my-branch",children:"Someone has push new commits on the master branch, how to update my branch?"}),"\n",(0,o.jsxs)(t.p,{children:["To update your branch, you need to do a ",(0,o.jsx)(t.strong,{children:"rebase"}),".\nIn your terminal, type the following to rebase your branch on the ",(0,o.jsx)(t.code,{children:"master"})," branch:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"git fetch\ngit rebase origin/master\n"})}),"\n",(0,o.jsxs)(t.p,{children:["Then, look into the ",(0,o.jsx)(t.em,{children:"Git Panel"})," of VS code: if they are conflicts, it will show\nthem to you. You can then fix them, and then validate them by clicking\n",(0,o.jsx)(t.em,{children:"Continue"}),". Repeat these steps again for each commit where there are conflicts,\nuntil VS code does not show anymore the ",(0,o.jsx)(t.em,{children:"Continue"})," button."]}),"\n",(0,o.jsxs)(t.p,{children:["In the VS code files, ",(0,o.jsx)(t.strong,{children:(0,o.jsx)(t.code,{children:"Current change"})})," represents the code\nfrom the branch ",(0,o.jsx)(t.code,{children:"master"}),", and ",(0,o.jsx)(t.strong,{children:(0,o.jsx)(t.code,{children:"Incoming change"})})," represents the code from your\nbranch."]}),"\n",(0,o.jsx)(t.admonition,{title:"Warning",type:"caution",children:(0,o.jsxs)(t.p,{children:["If you have already pushed your branch on GitHub, the ",(0,o.jsx)(t.code,{children:"git push"})," command\nwill not work after a rebase. You need to make a ",(0,o.jsx)(t.strong,{children:"forced push"})," to update your\nbranch on GitHub: ",(0,o.jsx)(t.code,{children:"git push -f"}),"."]})})]})}function d(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},805:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/create-branch-9c5d7dd5a5ada186966344c599e7c021.gif"},1151:(e,t,n)=>{n.d(t,{Z:()=>s,a:()=>a});var o=n(7294);const r={},i=o.createContext(r);function a(e){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),o.createElement(i.Provider,{value:t},e.children)}}}]);