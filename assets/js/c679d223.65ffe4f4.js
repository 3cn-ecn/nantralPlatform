"use strict";(self.webpackChunknantralplatform_docs=self.webpackChunknantralplatform_docs||[]).push([[8947],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>h});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),s=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=s(a),c=r,h=d["".concat(p,".").concat(c)]||d[c]||m[c]||l;return a?n.createElement(h,i(i({ref:t},u),{},{components:a})):n.createElement(h,i({ref:t},u))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=c;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[d]="string"==typeof e?e:r,i[1]=o;for(var s=2;s<l;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},5162:(e,t,a)=>{a.d(t,{Z:()=>i});var n=a(7294),r=a(6010);const l="tabItem_Ymn6";function i(e){let{children:t,hidden:a,className:i}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,i),hidden:a},t)}},5488:(e,t,a)=>{a.d(t,{Z:()=>c});var n=a(7462),r=a(7294),l=a(6010),i=a(2389),o=a(7392),p=a(7094),s=a(2466);const u="tabList__CuJ",d="tabItem_LNqP";function m(e){const{lazy:t,block:a,defaultValue:i,values:m,groupId:c,className:h}=e,k=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),f=m??k.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),y=(0,o.l)(f,((e,t)=>e.value===t.value));if(y.length>0)throw new Error(`Docusaurus error: Duplicate values "${y.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const g=null===i?i:i??k.find((e=>e.props.default))?.props.value??k[0].props.value;if(null!==g&&!f.some((e=>e.value===g)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${g}" but none of its children has the corresponding value. Available values are: ${f.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:v,setTabGroupChoices:b}=(0,p.U)(),[N,w]=(0,r.useState)(g),C=[],{blockElementScrollPositionUntilNextRender:j}=(0,s.o5)();if(null!=c){const e=v[c];null!=e&&e!==N&&f.some((t=>t.value===e))&&w(e)}const T=e=>{const t=e.currentTarget,a=C.indexOf(t),n=f[a].value;n!==N&&(j(t),w(n),null!=c&&b(c,String(n)))},O=e=>{let t=null;switch(e.key){case"Enter":T(e);break;case"ArrowRight":{const a=C.indexOf(e.currentTarget)+1;t=C[a]??C[0];break}case"ArrowLeft":{const a=C.indexOf(e.currentTarget)-1;t=C[a]??C[C.length-1];break}}t?.focus()};return r.createElement("div",{className:(0,l.Z)("tabs-container",u)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":a},h)},f.map((e=>{let{value:t,label:a,attributes:i}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:N===t?0:-1,"aria-selected":N===t,key:t,ref:e=>C.push(e),onKeyDown:O,onClick:T},i,{className:(0,l.Z)("tabs__item",d,i?.className,{"tabs__item--active":N===t})}),a??t)}))),t?(0,r.cloneElement)(k.filter((e=>e.props.value===N))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},k.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==N})))))}function c(e){const t=(0,i.Z)();return r.createElement(m,(0,n.Z)({key:String(t)},e))}},887:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var n=a(7462),r=(a(7294),a(3905));a(5488),a(5162);const l={sidebar_position:4},i="Django",o={unversionedId:"dev/learning/django",id:"dev/learning/django",title:"Django",description:"Tutorial",source:"@site/docs/dev/learning/django.md",sourceDirName:"dev/learning",slug:"/dev/learning/django",permalink:"/docs/dev/learning/django",draft:!1,editUrl:"https://github.com/3cn-ecn/nantralPlatform/tree/master/docs/docs/dev/learning/django.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"devSidebar",previous:{title:"Git",permalink:"/docs/dev/learning/git"},next:{title:"React",permalink:"/docs/dev/learning/react"}},p={},s=[{value:"Tutorial",id:"tutorial",level:2},{value:"Launching the server",id:"launching-the-server",level:2},{value:"Pull last updates",id:"pull-last-updates",level:2},{value:"Create and apply migrations",id:"create-and-apply-migrations",level:2},{value:"Create a new server app",id:"create-a-new-server-app",level:2}],u={toc:s};function d(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"django"},"Django"),(0,r.kt)("h2",{id:"tutorial"},"Tutorial"),(0,r.kt)("p",null,"Let's start with django!\nFollow this tutorial to learn how to use django and what it can do for you: ",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django"},"Django Web Framework (Python) -\nLearn Web Development | MDN"),"."),(0,r.kt)("admonition",{title:"Tips!",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"You can skip the ",(0,r.kt)("strong",{parentName:"p"},"Sessions framework"),", ",(0,r.kt)("strong",{parentName:"p"},"Working with forms"),", and\n",(0,r.kt)("strong",{parentName:"p"},"Deploying Django to production")," pages.")),(0,r.kt)("h2",{id:"launching-the-server"},"Launching the server"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"If you use Github Desktop, open it, then open the repository in VScode. Else, directly open the directory in VScode."),(0,r.kt)("li",{parentName:"ol"},"Open a new terminal in VScode if there is no one (",(0,r.kt)("em",{parentName:"li"},"Terminal")," tab > ",(0,r.kt)("em",{parentName:"li"},"New terminal"),")"),(0,r.kt)("li",{parentName:"ol"},"Go into the ",(0,r.kt)("inlineCode",{parentName:"li"},"backend")," folder with ",(0,r.kt)("inlineCode",{parentName:"li"},"cd")," command"),(0,r.kt)("li",{parentName:"ol"},"Run the following command:",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"pipenv run start\n"))),(0,r.kt)("li",{parentName:"ol"},"Visit your local website at ",(0,r.kt)("a",{parentName:"li",href:"http://localhost:8000"},"http://localhost:8000"),", or shutdown the server with ",(0,r.kt)("kbd",null,"CTRL")," + ",(0,r.kt)("kbd",null,"C"),".")),(0,r.kt)("h2",{id:"pull-last-updates"},"Pull last updates"),(0,r.kt)("p",null,"When someone else make some updates, you make a ",(0,r.kt)("inlineCode",{parentName:"p"},"pull")," with git to update your local copy of nantral platform (e.g. with Github Desktop, or git in VScode, or git in command line). When you pull last updates, you will probably have to:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"update your python dependencies:")," in the ",(0,r.kt)("inlineCode",{parentName:"li"},"backend")," folder, run ",(0,r.kt)("inlineCode",{parentName:"li"},"pipenv install --dev")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"update your database:")," in the ",(0,r.kt)("inlineCode",{parentName:"li"},"backend")," folder, run ",(0,r.kt)("inlineCode",{parentName:"li"},"pipenv run migrate")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"update your React dependencies:")," in the ",(0,r.kt)("inlineCode",{parentName:"li"},"frontend")," folder, run ",(0,r.kt)("inlineCode",{parentName:"li"},"npm install")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"update your compiled React files:")," in the ",(0,r.kt)("inlineCode",{parentName:"li"},"frontend")," folder, run ",(0,r.kt)("inlineCode",{parentName:"li"},"npm run build:dev"))),(0,r.kt)("p",null,"If you are lazy (as all of us), you can also simply run this in the ",(0,r.kt)("inlineCode",{parentName:"p"},"nantralPlatform")," folder:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"make update\n")),(0,r.kt)("h2",{id:"create-and-apply-migrations"},"Create and apply migrations"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Whenever you make a change to your database's structure (basically each time you modify one of the ",(0,r.kt)("inlineCode",{parentName:"li"},"models.py")," file), you need to save the modifications of your database in a file so as to other users can know the database modifications. In the ",(0,r.kt)("inlineCode",{parentName:"li"},"backend")," folder, run ",(0,r.kt)("inlineCode",{parentName:"li"},"pipenv run makemigrations")," to automatically create these files"),(0,r.kt)("li",{parentName:"ul"},"Then, you can apply these modifications to your own database by running ",(0,r.kt)("inlineCode",{parentName:"li"},"pipenv run migrate"))),(0,r.kt)("p",null,"Some good practices:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The migration files are saved in the ",(0,r.kt)("inlineCode",{parentName:"li"},"migrations")," folder in each app. Try to rename the migrations scripts to something more understandable for a human. Example : rename ",(0,r.kt)("inlineCode",{parentName:"li"},"migration01.py")," to ",(0,r.kt)("inlineCode",{parentName:"li"},"create_news_model_alter_clubs.py")),(0,r.kt)("li",{parentName:"ul"},"Try also to merge migrations into one migration as much as possible."),(0,r.kt)("li",{parentName:"ul"},"Be careful: you can't change your migration files once you migrate your database. If you want to merge them before pushing your updates to the server for example, you'll have to destroy your database (simply delete the ",(0,r.kt)("inlineCode",{parentName:"li"},"db.sqlite3")," file).")),(0,r.kt)("h2",{id:"create-a-new-server-app"},"Create a new server app"),(0,r.kt)("p",null,'In django, all functionnalities are separeted in "apps". Each "app" correspond to a directory in the ',(0,r.kt)("inlineCode",{parentName:"p"},"server/apps")," folder."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"To create a new app in the django server, use ",(0,r.kt)("inlineCode",{parentName:"li"},"pipenv run django startapp <app_name>"),". This will create a new folder with the app name you chose."),(0,r.kt)("li",{parentName:"ul"},"Then move the app folder to the main ",(0,r.kt)("inlineCode",{parentName:"li"},"apps")," folder, so as to have all apps in the same place."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"In your new app folder:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Create or update a ",(0,r.kt)("inlineCode",{parentName:"li"},"urls.py")," script inside the folder. Base this script on other ",(0,r.kt)("inlineCode",{parentName:"li"},"urls.py")," you can find in other apps"),(0,r.kt)("li",{parentName:"ul"},"Update the ",(0,r.kt)("inlineCode",{parentName:"li"},"apps.py")," script, by replacing ",(0,r.kt)("inlineCode",{parentName:"li"},"name = 'app_name'")," by ",(0,r.kt)("inlineCode",{parentName:"li"},"name = 'apps.app_name'")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Then in the ",(0,r.kt)("inlineCode",{parentName:"strong"},"server/config")," folder:"),(0,r.kt)("em",{parentName:"li"}," In the ",(0,r.kt)("inlineCode",{parentName:"em"},"urls.py")," script, add a namespace for your app like this: ",(0,r.kt)("inlineCode",{parentName:"em"},"url('app_name/', include('apps.app_name.urls', namespace='app_name')),"),". This will link the url router to your urls.py script in the app you created.\n")," Finally add the app in ",(0,r.kt)("inlineCode",{parentName:"li"},"settings/base.py"),":\n",(0,r.kt)("inlineCode",{parentName:"li"},"COMMON_APPS = [ 'apps.app_name', ]")),(0,r.kt)("li",{parentName:"ul"},"Finally, some defaults tables have been added in your database: run the migrations, and then run the server!",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"pipenv run migrate\npiepnv run start\n")))))}d.isMDXComponent=!0}}]);