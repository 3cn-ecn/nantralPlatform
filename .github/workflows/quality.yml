name: Quality Tests

on: pull_request

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    name: Check changes
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
      docs: ${{ steps.filter.outputs.docs }}
    steps:
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            backend:
              - 'backend/**'
            frontend:
              - 'frontend/**'
            docs:
              - 'docs/**'

  backend:
    name: Back End Quality
    needs: changes
    if: ${{ needs.changes.outputs.backend == 'true' }}
    uses: ./.github/workflows/quality-backend.yml
    secrets: inherit

  frontend:
    name: Front End Quality
    needs: changes
    if: ${{ needs.changes.outputs.frontend == 'true' }}
    uses: ./.github/workflows/quality-frontend.yml
    secrets: inherit

  docs:
    name: Docs Quality
    needs: changes
    if: ${{ needs.changes.outputs.docs == 'true' }}
    uses: ./.github/workflows/quality-docs.yml
    secrets: inherit

  final:
    name: Final Job
    needs: [backend, frontend, docs]
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - name: Check previous jobs status
        run: |
          status=$(echo "${{ needs.backend.result }}" | tr '[:upper:]' '[:lower:]')
          status+=" ${{ needs.frontend.result }}" | tr '[:upper:]' '[:lower:]'
          status+=" ${{ needs.docs.result }}" | tr '[:upper:]' '[:lower:]'
          if [[ "$status" == *"failure"* ]]; then
            echo "::set-output name=status::failure"
          else
            echo "::set-output name=status::success"
          fi
      - name: Set overall status
        id: overall-status
        run: |
          if [[ "${{ needs.backend.result }}" == "skipped" && "${{ needs.frontend.result }}" == "skipped" && "${{ needs.docs.result }}" == "skipped" ]]; then
            echo "::set-output name=status::skipped"
          else
            echo "::set-output name=status::${{ steps.check-previous-jobs.outputs.status }}"
          fi

  final-check:
    name: Final Check
    needs: [backend, frontend, docs]
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - name: Check previous jobs status
        run: |
          status=$(echo "${{ needs.backend.result }}" | tr '[:upper:]' '[:lower:]')
          status+=" ${{ needs.frontend.result }}" | tr '[:upper:]' '[:lower:]'
          status+=" ${{ needs.docs.result }}" | tr '[:upper:]' '[:lower:]'
          if [[ "$status" == *"failure"* ]]; then
            echo "::set-output name=status::failure"
          else
            echo "::set-output name=status::success"
          fi

      - name: Set overall status
        id: overall-status
        run: |
          if [[ "${{ needs.backend.result }}" == "skipped" && "${{ needs.frontend.result }}" == "skipped" && "${{ needs.docs.result }}" == "skipped" ]]; then
            echo "::set-output name=status::skipped"
          else
            echo "::set-output name=status::${{ steps.check-previous-jobs.outputs.status }}"
          fi

      - name: Check final status
        id: check-final-status
        run: |
          if [[ "${{ needs.final.outputs.status }}" == "success" ]]; then
            echo "All previous jobs succeeded or were skipped."
            exit 0
          else
            echo "One or more previous jobs failed."
            exit 1
          fi
