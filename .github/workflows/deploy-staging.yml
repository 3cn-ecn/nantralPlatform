name: Deploy Staging

on:
  push:
    branches:
      - staging
    paths:
      - backend/**
      - deployment/**
      - frontend/**
      - .github/workflows/deploy-staging.yml

jobs:
  build-frontend:
    name: Build front end
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    steps:
      - name: Clone the repository
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: frontend/.nvmrc
          cache: npm
          cache-dependency-path: frontend/

      - name: Install dependencies
        run: npm ci --omit=dev

      - name: Build React
        run: |
          npm run build
          npm run leg:build

      - name: Upload files to the VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.INSTANCE_ADDRESS }}
          username: "ubuntu"
          key: ${{ secrets.SSH_KEY_DEPLOY }}
          source: "backend/static/js/*, backend/static/front/*"
          target: "nantralPlatform-staging"

  test-backend:
    name: Test back end
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    steps:
      - name: Clone the repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pipenv"

      - name: Install pipenv
        run: curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python

      - name: Install dependencies
        run: pipenv verify && pipenv sync

      - name: Run tests
        run: pipenv run test

  clone-database:
    name: Make a copy of the database
    runs-on: ubuntu-latest
    steps:
      - name: Clone the prod database to staging database
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.INSTANCE_ADDRESS }}
          username: "ubuntu"
          key: ${{ secrets.SSH_KEY_DEPLOY }}
          script: |
            cd nantralPlatform/deployment/scripts
            sudo apt-get install python3-psycopg2 -y
            python3 -m venv env
            source env/bin/activate
            pip install -r requirements.txt
            python3 db_staging.py
            deactivate
            rm -r env

  deploy:
    name: Deploy in staging
    needs: [build-frontend, test-backend, clone-database]
    runs-on: ubuntu-latest

    steps:
      - name: Clone the repository
        uses: actions/checkout@v3

      - name: Deploy to the VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.INSTANCE_ADDRESS }}
          username: "ubuntu"
          key: ${{ secrets.SSH_KEY_DEPLOY }}
          script: |
            cd nantralPlatform-staging
            git checkout staging && git pull origin staging
            cd ~/nantralPlatform/deployment
            sudo docker-compose -f docker-compose.yml -f docker-compose.prod.yml build backend-staging
            docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d
