name: Deploy Staging

on:
  push:
    branches:
      - staging

jobs:
  frontend-build:
    name: Build front end
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    steps:
      - name: Clone the repository
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: frontend/.nvmrc
          cache: npm
          cache-dependency-path: frontend/

      - name: Install dependencies
        run: npm ci --omit=dev

      - name: Build React
        run: npm run build

      - name: Upload files to the VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.INSTANCE_ADDRESS }}
          username: "ubuntu"
          key: ${{ secrets.SSH_KEY_DEPLOY }}
          source: "backend/static/front/*"
          target: "nantralPlatform-staging"

  email-templates-build:
    name: Build email templates
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: email-templates-generator

    steps:
      - name: Clone the repository
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: email-templates-generator/.nvmrc
          cache: npm
          cache-dependency-path: email-templates-generator/

      - name: Install dependencies
        run: npm ci --omit=dev

      - name: Build email templates
        run: npm run build

      - name: Upload files to the VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.INSTANCE_ADDRESS }}
          username: "ubuntu"
          key: ${{ secrets.SSH_KEY_DEPLOY }}
          source: "backend/templates/emails/*"
          target: "nantralPlatform-staging"

  clone-database:
    name: Make a copy of the database
    runs-on: ubuntu-latest
    steps:
      - name: Clone the prod database to staging database
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.INSTANCE_ADDRESS }}
          username: "ubuntu"
          key: ${{ secrets.SSH_KEY_DEPLOY }}
          script: |
            cd nantralPlatform/deployment/scripts
            sudo apt-get install python3-psycopg2 -y
            python3 -m venv env
            source env/bin/activate
            pip install -r requirements.txt
            python3 db_staging.py
            deactivate
            rm -r env

  deploy:
    name: Deploy to staging
    needs: [frontend-build, clone-database]
    runs-on: ubuntu-latest

    steps:
      - name: Pull latest commit
        uses: actions/checkout@v3

      - name: Deploy to the VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.INSTANCE_ADDRESS }}
          username: "ubuntu"
          key: ${{ secrets.SSH_KEY_DEPLOY }}
          script: |
            cd nantralPlatform-staging
            git fetch origin staging
            git switch staging
            git reset --hard origin/staging
            cd ~/nantralPlatform/deployment
            sudo docker-compose -f docker-compose.yml -f docker-compose.prod.yml build backend-staging
            docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d
