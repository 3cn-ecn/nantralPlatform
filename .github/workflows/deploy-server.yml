name: Deploy Server

on:
  push:
    branches:
      - master
    paths:
      - backend/**
      - deployment/**
      - frontend/**
      - .github/workflows/deploy-server.yml

jobs:
  changes:
    name: Check changes on Front end
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.filter.outputs.backend}}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          base: ${{ github.ref }}
          filters: |
            backend:
              - 'backend/**'
            frontend:
              - 'frontend/**'

  frontend-quality:
    name: Test front end quality
    needs: changes
    if: ${{ needs.changes.outputs.frontend == 'true' }}
    uses: ./.github/workflows/quality-frontend.yml
    secrets: inherit

  frontend-build:
    name: Build front end
    needs: frontend-quality
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    steps:
      - name: Clone the repository
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: frontend/.nvmrc
          cache: npm
          cache-dependency-path: frontend/

      - name: Install dependencies
        run: npm ci --omit=dev

      - name: Build React
        run: |
          npm run build
          npm run leg:build

      - name: Upload files to the VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.INSTANCE_ADDRESS }}
          username: "ubuntu"
          key: ${{ secrets.SSH_KEY_DEPLOY }}
          source: "backend/static/js/*, backend/static/front/*"
          target: "nantralPlatform"

  backend-quality:
    name: Test Back End Quality
    needs: changes
    if: ${{ needs.changes.outputs.backend == 'true' }}
    uses: ./.github/workflows/quality-backend.yml
    secrets: inherit

  deploy:
    name: Deploy on VPS
    needs: [frontend-build, backend-quality]
    if: ${{ always() }}
    runs-on: ubuntu-latest

    steps:
      - name: Pull latest commit
        uses: actions/checkout@v3

      - name: Backup before deploy
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.INSTANCE_ADDRESS }}
          username: "ubuntu"
          key: ${{ secrets.SSH_KEY_DEPLOY }}
          script: |
            cd nantralPlatform
            cd deployment/scripts
            git pull
            python3 -m venv env
            source env/bin/activate
            pip install -r requirements.txt
            python3 db_backup.py
            deactivate
            rm -r env

      - name: Deploy to the VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.INSTANCE_ADDRESS }}
          username: "ubuntu"
          key: ${{ secrets.SSH_KEY_DEPLOY }}
          script: |
            cd nantralPlatform/deployment
            git pull
            sudo cp /etc/letsencrypt/live/nantral-platform.fr/privkey.pem /home/ubuntu/nantralPlatform/deployment/certs/key.pem
            sudo cp /etc/letsencrypt/live/nantral-platform.fr/fullchain.pem /home/ubuntu/nantralPlatform/deployment/certs/cert.pem
            sudo docker-compose -f docker-compose.yml -f docker-compose.prod.yml build --no-cache nginx backend celery celery-beat
            docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d
