# Generated by Django 4.1.5 on 2023-01-16 10:28

import apps.group.models
import apps.utils.upload
from django.db import migrations, models
import django.db.models.deletion
import django_ckeditor_5.fields


class Migration(migrations.Migration):

    dependencies = [
        ('student', '0006_alter_student_faculty'),
        ('sociallink', '0005_alter_sociallink_label_alter_sociallink_url'),
        ('maps', '0001_initial'),
        ('group', '0021_grouptype_extra_parents'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='grouptype',
            options={'verbose_name': 'group type', 'verbose_name_plural': 'group types'},
        ),
        migrations.RemoveField(
            model_name='grouptype',
            name='category_field',
        ),
        migrations.RemoveField(
            model_name='grouptype',
            name='category_label',
        ),
        migrations.RemoveField(
            model_name='grouptype',
            name='category_label_default',
        ),
        migrations.AddField(
            model_name='grouptype',
            name='category_expr',
            field=models.CharField(default="''", help_text='A python expression to get the category label.', max_length=200, verbose_name='Category expression'),
        ),
        migrations.AddField(
            model_name='grouptype',
            name='sort_fields',
            field=models.CharField(blank=True, help_text='Add custom fields to sort groups. If categories are defined, you must reflect them here.', max_length=30, verbose_name='Sort Fields'),
        ),
        migrations.AddField(
            model_name='grouptype',
            name='sub_category_expr',
            field=models.CharField(default="''", help_text='A python expression to get the sub-category label.', max_length=200, verbose_name='Sub category expression'),
        ),
        migrations.AlterField(
            model_name='group',
            name='archived',
            field=models.BooleanField(default=False, help_text='An archived group cannot have new members and is hidden from the displayed list.', verbose_name='Archived group'),
        ),
        migrations.AlterField(
            model_name='group',
            name='banner',
            field=models.ImageField(blank=True, help_text='Your banner will be displayed at 1320x492 pixels.', null=True, upload_to=apps.utils.upload.PathAndRename('groups/banniere'), verbose_name='Banner'),
        ),
        migrations.AlterField(
            model_name='group',
            name='description',
            field=django_ckeditor_5.fields.CKEditor5Field(blank=True, verbose_name='Description'),
        ),
        migrations.AlterField(
            model_name='group',
            name='group_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='group.grouptype', verbose_name='Type of group'),
        ),
        migrations.AlterField(
            model_name='group',
            name='icon',
            field=models.ImageField(blank=True, help_text='Your icon will be displayed at 306x306 pixels.', null=True, upload_to=apps.utils.upload.PathAndRename('groups/logo'), verbose_name='Icon'),
        ),
        migrations.AlterField(
            model_name='group',
            name='members',
            field=models.ManyToManyField(blank=True, related_name='groups', through='group.Membership', to='student.student', verbose_name='Members'),
        ),
        migrations.AlterField(
            model_name='group',
            name='name',
            field=models.CharField(max_length=100, unique=True, verbose_name='Name'),
        ),
        migrations.AlterField(
            model_name='group',
            name='order',
            field=models.IntegerField(default=0, verbose_name='Order'),
        ),
        migrations.AlterField(
            model_name='group',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='group.group', verbose_name='Parent group'),
        ),
        migrations.AlterField(
            model_name='group',
            name='place',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='maps.place', verbose_name='Place attached to the group'),
        ),
        migrations.AlterField(
            model_name='group',
            name='private',
            field=models.BooleanField(default=False, help_text='A private group is only visible by group members.', verbose_name='Private group'),
        ),
        migrations.AlterField(
            model_name='group',
            name='public',
            field=models.BooleanField(default=False, help_text='If ticked, the group page can be seen by everyone, including non-authenticated users. Members, events and posts still however hidden.', verbose_name='Public group'),
        ),
        migrations.AlterField(
            model_name='group',
            name='restrict_membership',
            field=models.BooleanField(default=False, help_text="Hide the 'Become member' button. Only admins can add new members.", verbose_name='Restricted membership'),
        ),
        migrations.AlterField(
            model_name='group',
            name='short_name',
            field=models.CharField(blank=True, help_text='This name will be used in the list of groups.', max_length=20, verbose_name='Short name'),
        ),
        migrations.AlterField(
            model_name='group',
            name='social_links',
            field=models.ManyToManyField(blank=True, related_name='+', to='sociallink.sociallink', verbose_name='Social networks'),
        ),
        migrations.AlterField(
            model_name='group',
            name='subscribers',
            field=models.ManyToManyField(blank=True, related_name='subscriptions', to='student.student', verbose_name='Subscribers'),
        ),
        migrations.AlterField(
            model_name='group',
            name='summary',
            field=models.CharField(blank=True, max_length=500, verbose_name='Summary'),
        ),
        migrations.AlterField(
            model_name='group',
            name='video1',
            field=models.URLField(blank=True, null=True, verbose_name='Video link 1'),
        ),
        migrations.AlterField(
            model_name='group',
            name='video2',
            field=models.URLField(blank=True, null=True, verbose_name='Video link 2'),
        ),
        migrations.AlterField(
            model_name='group',
            name='year',
            field=models.IntegerField(blank=True, help_text='For scholar year, only indicate the first year (from september to december).', null=True, verbose_name='Group year'),
        ),
        migrations.AlterField(
            model_name='grouptype',
            name='extra_parents',
            field=models.ManyToManyField(blank=True, help_text='Children groups of these groups will be displayed in the list of all groups.', related_name='+', to='group.group', verbose_name='Additional parent groups'),
        ),
        migrations.AlterField(
            model_name='grouptype',
            name='icon',
            field=models.ImageField(blank=True, null=True, upload_to=apps.utils.upload.PathAndRename('groups/types'), verbose_name='Icon'),
        ),
        migrations.AlterField(
            model_name='grouptype',
            name='is_year_group',
            field=models.BooleanField(default=False, help_text='Groupes are linked to a scholar year. No dates are asked to members.', verbose_name='Year Group'),
        ),
        migrations.AlterField(
            model_name='grouptype',
            name='map',
            field=models.ForeignKey(blank=True, default=False, help_text='Groups can have a place only if a map is associated.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='maps.map', verbose_name='Associated map'),
        ),
        migrations.AlterField(
            model_name='grouptype',
            name='name',
            field=models.CharField(max_length=20, unique=True, verbose_name='Type name'),
        ),
        migrations.AlterField(
            model_name='grouptype',
            name='place_required',
            field=models.BooleanField(default=False, help_text='Only if a map is associated.', verbose_name='Place is required'),
        ),
        migrations.AlterField(
            model_name='grouptype',
            name='private_by_default',
            field=models.BooleanField(default=False, help_text='New groups are private by default.', verbose_name='Private by default'),
        ),
        migrations.AlterField(
            model_name='membership',
            name='admin_request',
            field=models.BooleanField(default=False, verbose_name='Asked to become admin'),
        ),
        migrations.AlterField(
            model_name='membership',
            name='admin_request_messsage',
            field=models.TextField(blank=True, verbose_name='Request message'),
        ),
        migrations.AlterField(
            model_name='membership',
            name='begin_date',
            field=models.DateField(blank=True, default=apps.group.models.today, null=True, verbose_name='Begin date'),
        ),
        migrations.AlterField(
            model_name='membership',
            name='end_date',
            field=models.DateField(blank=True, default=apps.group.models.one_year_later, null=True, verbose_name='End date'),
        ),
        migrations.AlterField(
            model_name='membership',
            name='order',
            field=models.IntegerField(default=0, verbose_name='Order'),
        ),
        migrations.AlterField(
            model_name='membership',
            name='summary',
            field=models.CharField(blank=True, max_length=50, verbose_name='Summary'),
        ),
    ]
