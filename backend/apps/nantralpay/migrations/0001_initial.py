# Generated by Django 4.2.20 on 2025-05-16 22:22

import apps.utils.fields.image_field
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('event', '0018_event_nantralpay_has_been_opened_and_more'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('group', '0018_alter_group_banner_alter_group_icon'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AccessToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=255, unique=True)),
                ('creation_date', models.DateTimeField()),
                ('expiration_date', models.DateTimeField()),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('description', models.CharField(help_text='Explain what the order is for', max_length=255)),
                ('status', models.CharField(choices=[('Saved', 'Saved'), ('Pending', 'Pending'), ('Canceled', 'Canceled'), ('Completed', 'Completed'), ('Unknown', 'Unknown')], default='Saved', max_length=255)),
                ('helloasso_order_id', models.IntegerField(blank=True, null=True)),
                ('checkout_intent_id', models.IntegerField(blank=True, null=True)),
                ('receiver_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='received_orders', to='group.group')),
                ('receiver_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='received_orders', to=settings.AUTH_USER_MODEL)),
                ('sender_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sent_orders', to='group.group')),
                ('sender_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sent_orders', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(help_text='The user who created the order', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RefreshToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=255, unique=True)),
                ('creation_date', models.DateTimeField()),
                ('expiration_date', models.DateTimeField()),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.CharField(max_length=255)),
                ('helloasso_payment_id', models.IntegerField(blank=True, null=True)),
                ('payment_status', models.CharField(choices=[('Pending', 'Pending'), ('Authorized', 'Authorized'), ('Refused', 'Refused'), ('Unknown', 'Unknown'), ('Registered', 'Registered'), ('Refunded', 'Refunded'), ('Refunding', 'Refunding'), ('Contested', 'Contested')], default='Pending', max_length=255)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nantralpay.order')),
            ],
        ),
        migrations.CreateModel(
            name='Seller',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seller_list', to='event.event')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seller', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('name_fr', models.CharField(max_length=255, null=True)),
                ('name_en', models.CharField(max_length=255, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('image', apps.utils.fields.image_field.CustomImageField(blank=True, null=True, verbose_name='Image')),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='items', to='event.event')),
            ],
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='used_in_list', to='nantralpay.item')),
            ],
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('order_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='nantralpay.order')),
                ('items', models.ManyToManyField(related_name='sales', through='nantralpay.Content', to='nantralpay.item')),
            ],
            bases=('nantralpay.order',),
        ),
        migrations.CreateModel(
            name='QRCode',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('expiration_date', models.DateTimeField(default=datetime.datetime(2025, 5, 16, 22, 24, 40, 496888, tzinfo=datetime.timezone.utc))),
                ('scanned', models.BooleanField(default=False)),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('scanned_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['content_type', 'object_id'], name='nantralpay__content_2bdaed_idx')],
            },
        ),
        migrations.AddConstraint(
            model_name='item',
            constraint=models.UniqueConstraint(fields=('name', 'event'), name='unique_event_item_name'),
        ),
        migrations.AddField(
            model_name='content',
            name='sale',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contents', to='nantralpay.sale'),
        ),
        migrations.AddConstraint(
            model_name='content',
            constraint=models.UniqueConstraint(fields=('item', 'sale'), name='unique_item_sale'),
        ),
    ]
